<template>
  <div id="treasurylist">
    <topBar :title="'保库'"></topBar>

    <div class="tab">
      <div :class="{ active: index == selectMenu }" v-for="(item,index) in menu" :key="index" @click="screen(index)">{{ item }}
        <svg class="icon" :class="{ activeIcon: index == selectMenu }" aria-hidden="true">
          <use xlink:href="#icon-moreDown"></use>
        </svg>
      </div>
    </div>
    <div class="tab2" v-if="mask">
      <div :class="{ activeTab2: index == selectMenu2 }" v-for="(item,index) in menu2" :key="index" @click="screenTab2(index)">{{ item }}</div>
    </div>

    <div class="mask" v-if="mask" @click="nomask"></div>

    <div class="main">
      <div class="loadmore" ref="loadmorescroll">
        <div class="warp">
          <div class="list" v-for="(item,index) in content" :key="index" @click="link">
            <div class="main">
              <div class="pic">
                <img :src="item.pic" alt="">
                <div v-if="item.buy_status != 0" class="sale"></div>
              </div>
              <div class="info">
                <div class="name">{{ item.name }}</div>
                <div class="label">{{ item.labels }}</div>
                <div class="price">
                  <span>￥{{ item.price }}</span>&nbsp;起
                </div>
              </div>
            </div>
          </div>
          <div class="seat"></div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import topBar from '@/components/TopBar'
import BScroll from 'better-scroll'
export default {
  name: 'TreasuryList',
  components: {
    topBar,
    BScroll
  },
  props: {
    type: {}
  },
  data () {
    return {
      menu: ['适合人群', '保障额度', '保障期限'],
      list0: ['不限', '少儿', '成人', '中老年', '女性'],
      list1: ['不限', '10万以下', '11~20万', '21~30万', '31~50万', '51~100万', '100万以上'],
      list2: ['不限', '一年及以内', '长期险-定期', '长期险-终身'],
      menu2: [],
      selectMenu2: 0,
      selectMenu: 5,
      content: [],
      mask: false
    }
  },
  mounted () {
    this.getInfo()
    this.$nextTick(() => {
      this.listScroll()
    })
  },
  methods: {
    getInfo () {
      this.axios.get('/api2/getSecurityList', {
        params: {
          type: this.type,
          sort: {},
          nums: 0
        }
      }).then(res => {
        this.content = res.data.content
      })
    },
    addInfo () {
      this.axios.get('/api2/getSecurityList', {
        params: {
          type: this.type,
          sort: {},
          nums: this.content.length
        }
      }).then(res => {
        this.content = this.content.concat(res.data.content)
      }).then(() => {
        this.scroll.finishPullUp()
        this.scroll.refresh()
      })
    },
    link () {

    },
    listScroll () {
      this.scroll = new BScroll(this.$refs.loadmorescroll, {
        pullUpLoad: {
          threshold: -50
        }
      })
      this.scroll.on('pullingUp', () => {
        this.addInfo()
      })
    },
    screen (index) {
      this.menu2 = this['list' + index]
      if (index === this.selectMenu) {
        this.selectMenu = 5
        this.mask = false
      } else {
        this.selectMenu = index
        this.mask = true
      }
    },
    screenTab2 (index) {
      this.selectMenu2 = index
      this.mask = false
      this.selectMenu = 5
      console.log(this.menu2[index])
      console.log(this.menu[this.selectMenu])
      // this.menu[this.selectMenu] = this.menu2[index]
    },
    nomask () {
      this.mask = false
      this.selectMenu = 5
    }
  }
}
</script>

<style scoped>
@import '../../assets/css/global.css';
#treasurylist {
  height: 100%;
}

.mask {
  position: fixed;
  z-index: 2;
  opacity: .7;
  background: #000;
  height: 100%;
  width: 100%;
}

.tab {
  display: flex;
  height: 80px;
  line-height: 80px;
  text-align: center;
  background: #fff;
  font-size: var(--s-fs);
  color: var(--s-bgc);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.06);
  border-bottom: 1PX solid #eee;
  z-index: 5;
  & div {
    flex: 1;
  }
  & div:not(:last-child) {
    border-right: 1PX solid #eee;
  }
  & .icon {
    width: 30px;
    height: 30px;
  }
  & .active {
    color: var(--blue);
  }
  & .activeIcon {
    transform:rotate(180deg);
  }
}

.tab2 {
  position: fixed;
  width: 100%;
  z-index: 4;
  & div {
    height: 70px;
    line-height: 70px;
    background: #fff;
    padding: 0 20px;
    font-size: var(--s-fs);
    color: var(--m-bgc);
    border-bottom: 1PX solid #eee;
  }
  & .activeTab2 {
    color: var(--blue);
  }
}

.main {
  height: calc(100% - 170px);
}

.loadmore {
  height: 100%;
  overflow: hidden;
}

.list {
  margin-top: 20px;
  background: #fff;
  /* height: 220px; */
  padding: var(--edge);
  & .pic {
    position: relative;
    float: left;
    width: 218px;
    height: 218px;
    & img {
      width: 100%;
      height: 100%;
      border: 2PX solid #eee;
    }
    & .sale {
      position: absolute;
      left: 0;
      top: -10px;
      width: 160px;
      height: 80px;
      background-image: url("../../assets/img/sale.png");
      background-size: 50%;
      background-repeat: no-repeat;
    }
  }
  & .info {
    overflow: hidden;
    padding-left: var(--edge);
    & .name {
      font-size: var(--b-fs);
      height: 80px;
      line-height: 40px;
    }
    & .label {
      font-size: var(--s-fs);
      color: var(--s-bgc);
      height: 80px;
      line-height: 40px;
    }
  }
}

.seat {
  height: 50px;
}
</style>
