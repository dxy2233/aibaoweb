<template>
  <div id="allpicker">
    <div class="select" @click="showPicker">{{ selectedText[0] }}</div>
    <Picker @select="handleSelect(arguments)" :data="content" :selected-index="selectedIndex"
            ref="singlepicker" :title="title" cancelTxt="取消" confirmTxt="确定"></Picker>
  </div>
</template>

<script>
import Picker from '@/components/Picker'
export default {
  name: 'AllPicker',
  components: {
    Picker
  },
  props: {
    content: {}, // 所有数据
    text: {
      default: '请选择'
    }, // 初始显示的值
    title: {}, // picker标题
    selected: {},
    index: {
      default: 0
    }, // 默认选项的索引
    sign: {}
  },
  data () {
    return {
      selectedText: [], // 外层显示
      selectedIndex: [0]
    }
  },
  mounted () {
    this.selectedText = [this.text]
    this.selectedIndex[0] = this.index
  },
  methods: {
    showPicker () {
      this.$refs.singlepicker.show()
    },
    handleSelect (args) {
      this.selectedText = args[2]
      this.$emit('update', [args[0][0], this.sign])
    }
  }
}
</script>

<style scoped>
.select {
  color: #666;
}
</style>
